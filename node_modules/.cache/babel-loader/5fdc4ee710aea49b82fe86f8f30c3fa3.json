{"ast":null,"code":"var _jsxFileName = \"/home/cracked/Desktop/Ascension XX/src/Components/EventPage.js\";\nimport React, { Component } from 'react';\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport firebase from 'firebase';\nimport TabbedLayout from './TabbedLayout';\nimport './assets/css/events.css';\nimport GenEvents from './GenEvents';\nimport DeptEvents from './DeptEvents';\nimport Workshops from './Workshops';\nimport ModalBox from './ModalBox';\n\nclass EventPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 0,\n      isModalOpen: false,\n      deptEvents: [],\n      genEvents: [],\n      modalEvent: {\n        title: '',\n        desc: ''\n      }\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.updateCurrentPage = this.updateCurrentPage.bind(this);\n    this.fetchEvents = this.fetchEvents.bind(this);\n    this.sortEvents = this.sortEvents.bind(this);\n  }\n\n  toggleModal(event) {\n    if (event == null) {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    } else {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen,\n        modalEvent: event\n      });\n    }\n  }\n\n  updateCurrentPage(pageNo) {\n    this.setState({\n      currentPage: pageNo\n    });\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TabbedLayout, {\n      currentPage: this.state.currentPage,\n      isMobile: this.props.isMobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ModalBox, {\n      show: this.state.isModalOpen,\n      onClose: this.toggleModal,\n      event: this.state.modalEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/events/general\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      id: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(GenEvents, {\n      modalToggle: this.toggleModal,\n      updateCurrentPage: this.updateCurrentPage,\n      events: this.state.genEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(Route, {\n      exact: true,\n      path: \"/events/dept\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      id: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(DeptEvents, {\n      modalToggle: this.toggleModal,\n      updateCurrentPage: this.updateCurrentPage,\n      events: this.state.deptEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), this.props.isMobile ? React.createElement(Route, {\n      exact: true,\n      path: \"/events/workshops\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Workshops, {\n      isMobile: this.props.isMobile,\n      updateCurrentPage: this.updateCurrentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null)));\n  }\n\n  fetchEvents() {\n    var database = firebase.database();\n    const depts = {\n      mech: \"Mechanical\",\n      ce: \"Civil\",\n      eee: \"Electrical\",\n      chem: \"Chemical\",\n      prod: \"Production\",\n      cse: \"Computer Science\",\n      ec: \"Electronics\",\n      arch: \"Architecture\",\n      mca: \"MCA\"\n    };\n    database.ref(\"/events/\").once('value').then(snapshot => {\n      const snaps = snapshot.val();\n      var data = [];\n      var genEvents = [];\n      var deptEvents = {};\n      var count = 0;\n\n      for (let row in snaps) {\n        let event = snaps[row];\n        data.push(event);\n\n        if (event.is_department) {\n          let dept = event.department;\n          let deptName = depts[dept.toLowerCase()];\n\n          if (Object.keys(deptEvents).indexOf(deptName) >= 0) {\n            deptEvents[deptName].push(event);\n          } else {\n            deptEvents[deptName] = [event];\n          }\n\n          if (deptName === \"Computer Science\") count += 1;\n        } else if (event.is_department == \"\" && event.department == \"\") {// do nothing\n        } else {\n          genEvents.push(event);\n        }\n      }\n\n      if (data.length <= 0) {\n        this.setState({\n          deptEvents: [],\n          genEvents: []\n        });\n        document.getElementById(\"loading\").innerText = \"Coming Soon\";\n        return;\n      } else {\n        var sortedDeptEvents = this.sortEvents(deptEvents);\n        this.setState({\n          deptEvents: sortedDeptEvents,\n          genEvents: genEvents\n        });\n      } // console.log(\"gen\", genEvents);\n      // console.log(\"dept\", deptEvents);\n      // document.getElementById(\"loading\").style.display = \"none\";\n\n    });\n  }\n\n  sortEvents(eventList) {\n    let deptList = Object.keys(eventList);\n    let sortedList = new Object();\n    deptList.sort();\n\n    for (let dept of deptList) {\n      sortedList[dept] = eventList[dept];\n    }\n\n    return sortedList;\n  }\n\n}\n\nexport default EventPage;","map":{"version":3,"sources":["/home/cracked/Desktop/Ascension XX/src/Components/EventPage.js"],"names":["React","Component","Switch","Link","Route","firebase","TabbedLayout","GenEvents","DeptEvents","Workshops","ModalBox","EventPage","constructor","props","state","currentPage","isModalOpen","deptEvents","genEvents","modalEvent","title","desc","toggleModal","bind","updateCurrentPage","fetchEvents","sortEvents","event","setState","pageNo","componentDidMount","render","isMobile","database","depts","mech","ce","eee","chem","prod","cse","ec","arch","mca","ref","once","then","snapshot","snaps","val","data","count","row","push","is_department","dept","department","deptName","toLowerCase","Object","keys","indexOf","length","document","getElementById","innerText","sortedDeptEvents","eventList","deptList","sortedList","sort"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Switch,\n    Link,\n    Route} from \"react-router-dom\";\nimport firebase from 'firebase';\n\nimport TabbedLayout from './TabbedLayout';\n\nimport './assets/css/events.css';\nimport GenEvents from './GenEvents';\nimport DeptEvents from './DeptEvents';\nimport Workshops from './Workshops';\nimport ModalBox from './ModalBox';\n\nclass EventPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            currentPage: 0,\n            isModalOpen: false,\n            deptEvents: [],\n            genEvents: [],\n            modalEvent: {\n                title: '',\n                desc: ''\n            } }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.updateCurrentPage = this.updateCurrentPage.bind(this);\n        this.fetchEvents = this.fetchEvents.bind(this);\n        this.sortEvents = this.sortEvents.bind(this);\n    }\n    toggleModal(event){\n        if(event==null){\n            this.setState({\n                isModalOpen: !this.state.isModalOpen\n            });\n        }else{\n            this.setState({\n                isModalOpen: !this.state.isModalOpen,\n                modalEvent: event\n            });\n        }\n    }\n    updateCurrentPage(pageNo){\n        this.setState({\n            currentPage: pageNo\n        });\n    }\n    componentDidMount(){\n        this.fetchEvents();\n    }\n    render() { \n        return ( \n            <div>\n                <TabbedLayout currentPage={this.state.currentPage}\n                             isMobile={this.props.isMobile} />\n                <ModalBox \n                    show={this.state.isModalOpen}\n                    onClose={this.toggleModal}\n                    event={this.state.modalEvent}/>\n                <Switch>\n                    <Route exact path=\"/events/general\">\n                        <div>\n                            <h3 className=\"page-title\" id=\"loading\"></h3>\n                            <GenEvents \n                                modalToggle={this.toggleModal}\n                                updateCurrentPage={this.updateCurrentPage}\n                                events={this.state.genEvents}/>\n                        </div>\n                    </Route>\n                    <Route exact path=\"/events/dept\">\n                        <div>\n                            <h3 className=\"page-title\" id=\"loading\"></h3>\n                            <DeptEvents\n                                modalToggle={this.toggleModal}\n                                updateCurrentPage={this.updateCurrentPage}\n                                events={this.state.deptEvents}/>\n                        </div>\n                    </Route>\n                    {this.props.isMobile? <Route exact path=\"/events/workshops\">\n                                            <Workshops\n                                                isMobile={this.props.isMobile}\n                                                updateCurrentPage={this.updateCurrentPage}/>\n                                        </Route>\n                                        : <></>}\n                </Switch>\n            </div>\n         );\n    }\n    fetchEvents(){\n        var database = firebase.database();\n        const depts = {\n            mech: \"Mechanical\",\n            ce: \"Civil\",\n            eee: \"Electrical\",\n            chem: \"Chemical\",\n            prod: \"Production\", \n            cse: \"Computer Science\", \n            ec: \"Electronics\",\n            arch: \"Architecture\" ,\n            mca: \"MCA\"\n        }\n        database.ref(\"/events/\").once('value').then( (snapshot)=>{\n            const snaps = snapshot.val();\n            var data = [];\n            var genEvents = [];\n            var deptEvents = {};\n            var count = 0;\n            for( let row in snaps){\n                let event = snaps[row]\n                data.push(event);\n                if(event.is_department){\n                    let dept = event.department;\n                    let deptName = depts[dept.toLowerCase()]\n                    if(Object.keys(deptEvents).indexOf(deptName) >= 0){\n                        deptEvents[deptName].push(event);\n                    }else{\n                        deptEvents[deptName] = [event,];\n                    }\n                    if( deptName === \"Computer Science\")\n                        count += 1\n                }else if(event.is_department == \"\" && event.department == \"\"){\n                    // do nothing\n                }else{\n                    genEvents.push(event);\n                }\n            }\n            if(data.length <= 0){\n                this.setState({\n                    deptEvents: [],\n                    genEvents: []\n                });\n                document.getElementById(\"loading\").innerText = \"Coming Soon\";\n                return;\n            }else{\n                var sortedDeptEvents = this.sortEvents(deptEvents)\n                this.setState({\n                    deptEvents: sortedDeptEvents,\n                    genEvents: genEvents\n                });\n            }\n            // console.log(\"gen\", genEvents);\n            // console.log(\"dept\", deptEvents);\n            // document.getElementById(\"loading\").style.display = \"none\";\n        })\n    }\n    sortEvents(eventList){\n        let deptList = Object.keys(eventList)\n        let sortedList = new Object()\n        deptList.sort()\n\n        for( let dept of deptList){\n            sortedList[dept] = eventList[dept]\n        }\n        return sortedList;\n    }\n}\n \nexport default EventPage;"]},"metadata":{},"sourceType":"module"}