{"ast":null,"code":"var _jsxFileName = \"/home/cracked/Desktop/Ascension XX/src/Components/ModalBox.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './assets/css/modalbox.css';\n\nclass ModalBox extends React.Component {\n  constructor() {\n    super();\n    this.getEventDesc = this.getEventDesc.bind(this);\n    this.parseDesc = this.parseDesc.bind(this);\n  }\n\n  parseDesc(desc) {\n    let newDesc = desc.replace(/\\n/g, \"<br/>\");\n    return newDesc;\n  }\n\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if (!this.props.show) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"backdrop fade-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"closeBtn\",\n      onClick: this.props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"x\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.event.eventname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fee-sec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Registration Fee: \\u20B9\", this.props.event.fee), React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: this.parseDesc(this.props.event.desc)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), !this.props.isWorkshop ? React.createElement(\"span\", {\n      className: \"event-rounds\",\n      dangerouslySetInnerHTML: {\n        __html: this.getEventDesc(this.props.event)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null)), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.isWorkshop ? React.createElement(\"div\", {\n      className: \"event-contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.props.event.contactPerson), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.event.contactNo)) : // <></>\n    React.createElement(Link, {\n      to: \"/events/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Register Now\"))));\n  }\n\n  getEventDesc(event) {\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    const getDate = d => {\n      let dt = new Date(d);\n      return `${days[dt.getDay()]} ${dt.getDate()}, ${months[dt.getMonth()]} ${dt.getFullYear()}`;\n    };\n\n    const getTime = t => {\n      let splt = t.split(\":\");\n\n      const padTime = l => {\n        if (l < 10) {\n          return \"0\" + l;\n        } else {\n          return l;\n        }\n      };\n\n      if (splt[0] > 12) return padTime(parseInt(splt[0]) - 12) + \":\" + splt[1] + \" PM\";else if (splt[0] == 12) return \"12:\" + splt[1] + \" PM\";else if (splt[0] == \"00\") {\n        return \"12:\" + splt[1] + \" AM\";\n      }\n      return t + \" AM\";\n    };\n\n    let content = \"<br/><br/>\";\n    console.log(event.rounds);\n\n    for (let round of event.rounds) {\n      console.log(round);\n      let roundStr = \"<b>Round: \" + round.roundname + \"</b><br/>\";\n      roundStr += \"<p>Date: \" + getDate(round.date) + \"<br/>\";\n      roundStr += \"Time: \" + getTime(round.time) + \"<br/>\";\n      roundStr += \"Venue: \" + round.venue + \"<br/></p>\";\n      content += roundStr;\n    }\n\n    return content;\n  }\n\n}\n\nModalBox.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\nexport default ModalBox;","map":{"version":3,"sources":["/home/cracked/Desktop/Ascension XX/src/Components/ModalBox.js"],"names":["React","Component","Link","PropTypes","ModalBox","constructor","getEventDesc","bind","parseDesc","desc","newDesc","replace","render","props","show","onClose","event","eventname","fee","__html","isWorkshop","contactPerson","contactNo","days","months","getDate","d","dt","Date","getDay","getMonth","getFullYear","getTime","t","splt","split","padTime","l","parseInt","content","console","log","rounds","round","roundStr","roundname","date","time","venue","propTypes","func","isRequired","bool","children","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './assets/css/modalbox.css';\n\nclass ModalBox extends React.Component {\n    constructor(){\n      super();\n      this.getEventDesc = this.getEventDesc.bind(this);\n      this.parseDesc = this.parseDesc.bind(this);\n    }\n    parseDesc(desc){\n      let newDesc = desc.replace(/\\n/g, \"<br/>\");\n      return newDesc;\n    }\n    render() {\n      // Render nothing if the \"show\" prop is false\n      if(!this.props.show) {\n        return null;\n      }\n      return (\n        <div className=\"backdrop fade-in\">\n          <div className=\"modal-style\">\n            <span className=\"closeBtn\" \n            onClick={this.props.onClose}>\n                x\n            </span>\n            <h3>{this.props.event.eventname}</h3>\n            <p>\n                <span className=\"fee-sec\">Registration Fee: ₹{this.props.event.fee}</span>\n                <span dangerouslySetInnerHTML={{__html: this.parseDesc(this.props.event.desc)}} />\n                {!this.props.isWorkshop?\n                  <span className=\"event-rounds\" dangerouslySetInnerHTML={{__html: this.getEventDesc(this.props.event)}}/>:\n                  <></>\n                }\n            </p>\n  \n            <div className=\"footer\">\n              {this.props.isWorkshop?\n                <div className=\"event-contact\">\n                  <span>{this.props.event.contactPerson}</span>\n                  <span>{this.props.event.contactNo}</span>\n                </div>:\n                // <></>\n                <Link to=\"/events/register\">Register Now</Link>\n              }\n            </div>\n          </div>\n        </div>\n      );\n    }\n    getEventDesc(event){\n      const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      const getDate = (d)=>{\n          let dt = new Date(d);\n          return `${days[dt.getDay()]} ${dt.getDate()}, ${months[dt.getMonth()]} ${dt.getFullYear()}`;\n      }\n      const getTime = (t)=>{\n        let splt = t.split(\":\");\n        const padTime = (l)=>{ if(l<10){ return \"0\" + l} else { return l} }\n        if ( splt[0] > 12 )\n          return padTime(parseInt(splt[0]) - 12) + \":\" + splt[1] + \" PM\"\n        else if( splt[0] == 12)\n            return  \"12:\" + splt[1] + \" PM\"\n        else if( splt[0] == \"00\"){\n          return \"12:\" + splt[1] + \" AM\"\n        }\n        return t + \" AM\";\n      }\n      let content = \"<br/><br/>\";\n      console.log(event.rounds)\n      for( let round of event.rounds){\n        console.log(round)\n        let roundStr = \"<b>Round: \" + round.roundname + \"</b><br/>\";\n        roundStr += \"<p>Date: \" + getDate(round.date) + \"<br/>\";\n        roundStr += \"Time: \" + getTime(round.time) + \"<br/>\";\n        roundStr += \"Venue: \" + round.venue + \"<br/></p>\";\n        content += roundStr;\n      }\n      return content;\n    }\n  }\n  \n  ModalBox.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    show: PropTypes.bool,\n    children: PropTypes.node\n  };\n \nexport default ModalBox;"]},"metadata":{},"sourceType":"module"}